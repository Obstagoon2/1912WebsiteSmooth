const calendarId = "ninq39q6r61rid4mot3h1ues5u3cmrdr@import.calendar.google.com";
const apiKey = "AIzaSyDFk7BVAYxUIngHdDOnVFD14XhnqdOSFDc";

const calendarContainer = document.getElementById("calendar-events");

async function fetchCalendarEvents() {
    const timeMin = new Date().toISOString();
    const url = `https://www.googleapis.com/calendar/v3/calendars/${encodeURIComponent(
        calendarId
    )}/events?key=${apiKey}&timeMin=${timeMin}&singleEvents=true&orderBy=startTime`;

    try {
        const response = await fetch(url);
        const data = await response.json();
        const events = data.items;

        calendarContainer.innerHTML = "";

        if (!events || events.length === 0) {
            calendarContainer.innerHTML = "<p>No upcoming events found.</p>";
            return;
        }

        events.forEach((event) => {
            const title = event.summary || "Untitled Event";
            const start = new Date(event.start.dateTime || event.start.date).toLocaleString();
            const end = event.end.dateTime ? new Date(event.end.dateTime).toLocaleString() : null;
            let description = event.description || "";

            // Remove RSVP or attribution line (e.g., anything after "You can see the RSVP..." or "(Asa added)")
            description = description.replace(/You can see the RSVP[\s\S]*/gi, "").trim();
            description = description.replace(/\(.*added\)/gi, "").trim();

            const location = event.location || "";

            const card = document.createElement("div");
            card.classList.add("event-card");

            card.innerHTML = `
                <h3>${title}</h3>
                <time>${start}${end ? ` - ${end}` : ""}</time>
                <p>${description}</p>
                ${location ? `<p><strong>Location:</strong> ${location}</p>` : ""}
            `;

            calendarContainer.appendChild(card);
        });
    } catch (error) {
        console.error("Error fetching calendar events:", error);
        calendarContainer.innerHTML = "<p>Failed to load events.</p>";
    }
}

fetchCalendarEvents();
