const apiKey = 'AIzaSyDFk7BVAYxUIngHdDOnVFD14XhnqdOSFDc';
const calendarId = 'ninq39q6r61rid4mot3h1ues5u3cmrdr@import.calendar.google.com';

async function fetchCalendarEvents() {
  const now = new Date().toISOString();
  const url = `https://www.googleapis.com/calendar/v3/calendars/${encodeURIComponent(calendarId)}/events?key=${apiKey}&timeMin=${now}&singleEvents=true&orderBy=startTime&maxResults=10`;

  try {
    const response = await fetch(url);
    if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);

    const data = await response.json();
    if (!data.items || data.items.length === 0) {
      displayNoEvents();
      return;
    }
    renderEvents(data.items);
  } catch (error) {
    console.error('Failed to fetch calendar events:', error);
    displayError(error);
  }
}

function renderEvents(events) {
  const container = document.getElementById('calendar-events');
  container.innerHTML = ''; // Clear previous

  events.forEach(event => {
    const card = document.createElement('div');
    card.className = 'event-card';

    // Event Title
    const title = document.createElement('h3');
    title.textContent = event.summary || 'No Title';
    card.appendChild(title);

    // Event Date(s)
    const time = document.createElement('time');
    let startDate = event.start.dateTime || event.start.date;
    let endDate = event.end.dateTime || event.end.date;

    // Format date nicely
    const options = { year: 'numeric', month: 'short', day: 'numeric', hour: '2-digit', minute: '2-digit' };
    let startFormatted = new Date(startDate).toLocaleString(undefined, options);
    let endFormatted = new Date(endDate).toLocaleString(undefined, options);

    time.textContent = startFormatted + (startFormatted !== endFormatted ? ` - ${endFormatted}` : '');
    card.appendChild(time);

    // Description (optional)
    if (event.description) {
      const desc = document.createElement('p');
      desc.textContent = event.description;
      card.appendChild(desc);
    }

    // Location (optional)
    if (event.location) {
      const loc = document.createElement('p');
      loc.textContent = `Location: ${event.location}`;
      loc.style.fontStyle = 'italic';
      card.appendChild(loc);
    }

    container.appendChild(card);
  });
}

function displayNoEvents() {
  const container = document.getElementById('calendar-events');
  container.innerHTML = `<p>No upcoming events found.</p>`;
}

function displayError(error) {
  const container = document.getElementById('calendar-events');
  container.innerHTML = `<p>Error loading events: ${error.message}</p>`;
}

// Initialize fetch on page load
document.addEventListener('DOMContentLoaded', fetchCalendarEvents);
